package postgres

import (
	"database/sql"

	"github.com/chrfrasco/sharing-wall/server/storage"
	// postgres drivers
	_ "github.com/lib/pq"
)

type postgres struct {
	db *sql.DB
}

// New creates a new postgres-backed storage service
func New(conn string) (storage.Service, error) {
	db, err := sql.Open("postgres", conn)
	if err != nil {
		return nil, err
	}

	err = db.Ping()
	if err != nil {
		return nil, err
	}

	query := `CREATE TABLE IF NOT EXISTS userQuote (
	  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	  quoteID TEXT NOT NULL,
	  quoteText TEXT NOT NULL,
	  quoteName TEXT NOT NULL,
	  quoteEmail TEXT NOT NULL,
	  quoteImageUrl TEXT NOT NULL
	)`
	_, err = db.Exec(query)
	if err != nil {
		return nil, err
	}

	return &postgres{db}, nil
}

func (p *postgres) Close() {
	p.db.Close()
}

func (p *postgres) ListQuotes(n int) []string {
	return make([]string, 0)
}
